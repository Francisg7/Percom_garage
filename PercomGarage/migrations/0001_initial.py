# Generated by Django 3.2 on 2021-07-26 10:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=254)),
                ('prenom', models.CharField(max_length=254)),
                ('adresse', models.CharField(max_length=254)),
                ('email', models.EmailField(max_length=254)),
                ('cni', models.IntegerField()),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=10)),
                ('telephone', models.IntegerField()),
                ('profile', models.ImageField(upload_to='pics_clients')),
            ],
            options={
                'db_table': 'client',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=254)),
                ('prenom', models.CharField(max_length=254)),
                ('date_de_naissance', models.DateField()),
                ('type_de_contrat', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD')], max_length=254)),
                ('addresse', models.CharField(max_length=254)),
                ('salaire', models.CharField(max_length=254)),
                ('cni', models.IntegerField()),
                ('telephone', models.IntegerField()),
                ('poste', models.CharField(max_length=254)),
                ('specialite', models.CharField(choices=[('Carrosier', 'Carrosier/Carrosi√®re'), ('Controleur Automobile', 'Controleur Automobile'), ('Depanneur remorquer', 'Depanneur remorquer'), ('Electricien Automobile', 'Electricien Automobile'), ('Mecanicien Automobile', 'Mecanicien Automobile'), ('Mecanicien motocycle', 'Mecanicien motocycle'), ('Monteur en pneumatique', 'Monteur en pneumatique'), ('Peintre en carroserie', 'Peintre en carroserie'), ('Technicien en Mecanique', 'Technicien en Mecanique')], default='Electricien Automobile', max_length=254)),
                ('profile', models.ImageField(upload_to='pics_employe')),
            ],
            options={
                'db_table': 'employe',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Pieces',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nom_piece', models.CharField(max_length=254)),
                ('modele_piece', models.CharField(max_length=254)),
                ('fabricant', models.CharField(max_length=254)),
                ('quantite', models.IntegerField()),
            ],
            options={
                'db_table': 'pieces',
                'ordering': ['nom_piece'],
            },
        ),
        migrations.CreateModel(
            name='Vehicules',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('immatriculation', models.CharField(max_length=254)),
                ('couleur', models.CharField(max_length=254)),
                ('marque', models.CharField(max_length=254)),
                ('num_chasis', models.IntegerField()),
                ('nb_chevaux', models.IntegerField()),
                ('modele', models.CharField(max_length=254)),
                ('type_moteur', models.CharField(max_length=254)),
                ('nb_places', models.CharField(max_length=254)),
                ('nb_portieres', models.IntegerField()),
                ('description', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'vehicules',
                'ordering': ['marque'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('cpassword', models.CharField(default='', max_length=254)),
                ('phone', models.CharField(max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='pics_piece')),
                ('employer', models.ManyToManyField(to='PercomGarage.Employe')),
                ('piece', models.ManyToManyField(to='PercomGarage.Pieces')),
            ],
            options={
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_rdv', models.DateField()),
                ('type_rdv', models.CharField(max_length=254)),
                ('description', models.CharField(max_length=254)),
                ('clients', models.ManyToManyField(to='PercomGarage.Client')),
            ],
            options={
                'db_table': 'rendez_vous',
                'ordering': ['date_rdv'],
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_location', models.DateField()),
                ('montant', models.IntegerField()),
                ('date_retour', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.client')),
                ('vehicule', models.ManyToManyField(to='PercomGarage.Vehicules')),
            ],
            options={
                'db_table': 'locations',
                'ordering': ['date_location'],
            },
        ),
        migrations.CreateModel(
            name='Laverie',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('prix', models.IntegerField()),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.employe')),
                ('vehicule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.vehicules')),
            ],
            options={
                'db_table': 'laverie',
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(max_length=254)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True)),
                ('duree', models.TimeField(blank=True)),
                ('activite', models.TextField(max_length=254)),
                ('observation', models.TextField(blank=True, max_length=254)),
                ('type_intervention', models.CharField(choices=[('Remorquage', 'Remorquage'), ('Depannage', 'Depannage'), ('Consultation Externe', 'Consultation Externe')], default='Remorquage', max_length=254)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.client')),
                ('employer', models.ManyToManyField(to='PercomGarage.Employe')),
                ('vehicule', models.ManyToManyField(to='PercomGarage.Vehicules')),
            ],
            options={
                'db_table': 'intervention',
                'ordering': ['duree'],
            },
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nom_garage', models.CharField(max_length=254, unique=True)),
                ('type_garage', models.CharField(choices=[('Reparateur agr√©e par les constructeur', 'Reparateur agr√©e par les constructeur'), ('M√©canicien R√©parateur Automobile', 'M√©canicien R√©parateur Automobile(MRA)')], default='Reparateur agr√©e par les constructeur', max_length=50)),
                ('date_creation_garage', models.DateField()),
                ('telephone', models.CharField(default='', max_length=254)),
                ('address', models.CharField(default='', max_length=254)),
                ('logo', models.ImageField(default='', upload_to='pics_garage')),
                ('numbre_employer', models.IntegerField(default=1)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.employe')),
                ('vehicule', models.ManyToManyField(to='PercomGarage.Vehicules')),
            ],
            options={
                'db_table': 'garage',
                'ordering': ['nom_garage'],
            },
        ),
        migrations.CreateModel(
            name='Facturation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('reference', models.CharField(max_length=250, unique=True)),
                ('libelle', models.CharField(max_length=254)),
                ('montant', models.IntegerField()),
                ('date', models.DateField()),
                ('client', models.ManyToManyField(to='PercomGarage.Client')),
                ('employer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.employe')),
            ],
            options={
                'db_table': 'facturation',
                'ordering': ['reference'],
            },
        ),
        migrations.AddField(
            model_name='employe',
            name='Garage',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='PercomGarage.garage'),
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_livraison', models.DateField()),
                ('prix', models.IntegerField()),
                ('quantite', models.IntegerField()),
                ('remise', models.IntegerField()),
                ('description', models.CharField(max_length=254)),
                ('client', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='PercomGarage.client')),
                ('employer', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='PercomGarage.employe')),
                ('stocks', models.ManyToManyField(to='PercomGarage.Stock')),
            ],
            options={
                'db_table': 'commande',
                'ordering': ['description'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='vehicule',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='PercomGarage.vehicules'),
        ),
    ]
